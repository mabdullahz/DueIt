'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _header_button = require('./header_button');

var _header_button2 = _interopRequireDefault(_header_button);

var _consts = require('./consts');

var _lib = require('./_lib');

var _add_months = require('date-fns/add_months');

var _add_months2 = _interopRequireDefault(_add_months);

var _is_before = require('date-fns/is_before');

var _is_before2 = _interopRequireDefault(_is_before);

var _is_after = require('date-fns/is_after');

var _is_after2 = _interopRequireDefault(_is_after);

var _start_of_month = require('date-fns/start_of_month');

var _start_of_month2 = _interopRequireDefault(_start_of_month);

var _format = require('date-fns/format');

var _format2 = _interopRequireDefault(_format);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MonthHeader = function (_React$Component) {
  _inherits(MonthHeader, _React$Component);

  function MonthHeader() {
    _classCallCheck(this, MonthHeader);

    return _possibleConstructorReturn(this, (MonthHeader.__proto__ || Object.getPrototypeOf(MonthHeader)).apply(this, arguments));
  }

  _createClass(MonthHeader, [{
    key: '_switchMonth',
    value: function _switchMonth(offset) {
      var _props = this.props,
          onMonthChange = _props.onMonthChange,
          activeMonth = _props.activeMonth;

      onMonthChange((0, _add_months2.default)(activeMonth, parseInt(offset)));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          activeMonth = _props2.activeMonth,
          minDate = _props2.minDate,
          maxDate = _props2.maxDate,
          blockClassName = _props2.blockClassName,
          headerNextArrow = _props2.headerNextArrow,
          headerNextTitle = _props2.headerNextTitle,
          headerPrevArrow = _props2.headerPrevArrow,
          headerPrevTitle = _props2.headerPrevTitle;


      var prevEnabled = minDate ? (0, _is_before2.default)((0, _start_of_month2.default)(minDate), (0, _start_of_month2.default)(activeMonth)) : true;
      var nextEnabled = maxDate ? (0, _is_after2.default)((0, _start_of_month2.default)(maxDate), (0, _start_of_month2.default)(activeMonth)) : true;

      return _react2.default.createElement(
        'div',
        { className: blockClassName + '-month_header' },
        _react2.default.createElement(_header_button2.default, {
          type: 'prev',
          arrow: headerPrevArrow,
          title: headerPrevTitle,
          enabled: prevEnabled,
          onClick: this._switchMonth.bind(this, -1),
          blockClassName: blockClassName
        }),
        _react2.default.createElement(
          'div',
          { className: blockClassName + '-month_header_title' },
          (0, _format2.default)(activeMonth, 'MMMM YYYY')
        ),
        _react2.default.createElement(_header_button2.default, {
          type: 'next',
          arrow: headerNextArrow,
          title: headerNextTitle,
          enabled: nextEnabled,
          onClick: this._switchMonth.bind(this, 1),
          blockClassName: blockClassName
        })
      );
    }
  }]);

  return MonthHeader;
}(_react2.default.Component);

MonthHeader.propTypes = {
  activeMonth: _lib.datePropType.isRequired,
  blockClassName: _propTypes2.default.string,
  headerNextArrow: _propTypes2.default.element,
  headerNextTitle: _propTypes2.default.string,
  headerPrevArrow: _propTypes2.default.element,
  headerPrevTitle: _propTypes2.default.string,
  maxDate: _lib.datePropType,
  minDate: _lib.datePropType,
  onMonthChange: _propTypes2.default.func.isRequired
};
MonthHeader.defaultProps = {
  blockClassName: _consts.BLOCK_CLASS_NAME,
  headerNextTitle: _consts.NEXT_MONTH_TITLE,
  headerPrevTitle: _consts.PREV_MONTH_TITLE
};
exports.default = MonthHeader;
module.exports = exports['default'];